{"version":3,"sources":["types/Options.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Options","TodoList","todos","selectedTodo","handleShowModal","className","map","todo","id","completed","classNames","title","type","onClick","TodoFilter","handleFilter","useState","query","setQuery","all","option","setOption","useEffect","value","onChange","event","target","active","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","handleCloseModal","isLoading","setIsLoading","user","setUser","userId","userFromServer","finally","href","email","name","App","setTodos","showModal","setShowModal","setSelectedTodo","filter","setFilter","filteredTodos","includes","trim","getFilteredTodos","currentFilter","ReactDOM","render","document","getElementById"],"mappings":"iLAAYA,E,mECUCC,EAA4B,SAAC,GAEnC,IADLC,EACI,EADJA,MAAOC,EACH,EADGA,aAAcC,EACjB,EADiBA,gBAErB,OACE,wBAAOC,UAAU,+BAAjB,UACE,gCACE,+BACE,mCACA,6BACE,sBAAMA,UAAU,OAAhB,SACE,mBAAGA,UAAU,qBAGjB,uCACA,wCAIJ,gCACGH,EAAMI,KAAI,SAAAC,GAAI,OACb,qBAEE,UAAQ,OACRF,UAAU,GAHZ,UAKE,oBAAIA,UAAU,eAAd,SACGE,EAAKC,KAER,oBAAIH,UAAU,eAAd,SACGE,EAAKE,WACJ,sBAAMJ,UAAU,OAAO,UAAQ,gBAA/B,SACE,mBAAGA,UAAU,qBAInB,oBAAIA,UAAU,2BAAd,SACE,mBACEA,UAAWK,IAAW,CACpB,mBAAoBH,EAAKE,UACzB,mBAAoBF,EAAKE,YAH7B,SAMGF,EAAKI,UAGV,oBAAIN,UAAU,8BAAd,SACE,wBACE,UAAQ,eACRA,UAAU,SACVO,KAAK,SACLC,QAAS,kBAAMT,EAAgBG,IAJjC,SAME,sBAAMF,UAAU,OAAhB,SACE,mBAAGA,UAAWK,IACZ,MACA,CACE,gBAA4B,OAAZP,QAAY,IAAZA,OAAA,EAAAA,EAAcK,MAAOD,EAAKC,GAC1C,UAAsB,OAAZL,QAAY,IAAZA,OAAA,EAAAA,EAAcK,MAAOD,EAAKC,eApCzCD,EAAKC,c,SD/BVR,K,UAAAA,E,gBAAAA,E,uBAAAA,M,KEQL,IAAMc,EAA8B,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAC5C,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA4BF,mBAAkBhB,EAAQmB,KAAtD,mBAAOC,EAAP,KAAeC,EAAf,KAEAC,qBAAU,WACRP,EAAa,CAAEE,QAAOG,aACrB,CAACH,EAAOG,IAgBX,OACE,uBAAMf,UAAU,mBAAhB,UACE,mBAAGA,UAAU,UAAb,SACE,sBAAMA,UAAU,SAAhB,SACE,yBACE,UAAQ,eACRkB,MAAOH,EACPI,SApBN,SAACC,GACDJ,EAAUI,EAAMC,OAAOH,QAgBnB,UAKE,wBAAQA,MAAOvB,EAAQmB,IAAvB,iBACA,wBAAQI,MAAOvB,EAAQ2B,OAAvB,oBACA,wBAAQJ,MAAOvB,EAAQS,UAAvB,8BAKN,oBAAGJ,UAAU,qDAAb,UACE,uBACE,UAAQ,cACRO,KAAK,OACLP,UAAU,QACVuB,YAAY,YACZL,MAAON,EACPO,SAhCkB,SAACC,GACzBP,EAASO,EAAMC,OAAOH,UAiClB,sBAAMlB,UAAU,eAAhB,SACE,mBAAGA,UAAU,8BAGdY,GAEG,sBAAMZ,UAAU,gBAAgBwB,MAAO,CAAEC,cAAe,OAAxD,SAEE,wBACE,UAAQ,oBACRlB,KAAK,SACLP,UAAU,SACVQ,QA1CY,WACxBK,EAAS,IACTG,EAAUrB,EAAQmB,iBCxBTY,G,MAAmB,kBAC9B,qBAAK1B,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,wBCSnB,SAAS2B,EAAOC,GAEd,IARYC,EAQNC,EAZS,iEAYYF,EAAM,QAGjC,OAXYC,EAWA,IAVL,IAAIE,SAAQ,SAAAC,GACjBC,WAAWD,EAASH,OAUnBK,MAAK,kBAAMC,MAAML,MACjBI,MAAK,SAAAE,GAAG,OAAIA,EAAIC,UAGd,ICXMC,EAA6B,SAAC,GAEpC,IADLxC,EACI,EADJA,aAAcyC,EACV,EADUA,iBAEd,EAAkC5B,oBAAS,GAA3C,mBAAO6B,EAAP,KAAkBC,EAAlB,KACA,EAAwB9B,qBAAxB,mBAAO+B,EAAP,KAAaC,EAAb,KAUA,OARA1B,qBAAU,WDOW,IAAC2B,ECNhB9C,IDMgB8C,ECLV9C,EAAa8C,ODKgBjB,EAAG,iBAAiBiB,KCJtDV,MAAK,SAAAW,GAAc,OAAIF,EAAQE,MAC/BC,SAAQ,kBAAML,GAAa,QAE/B,IAGD,sBAAKzC,UAAU,kBAAkB,UAAQ,QAAzC,UACE,qBAAKA,UAAU,qBAEdwC,EACC,cAAC,EAAD,IAEA,sBAAKxC,UAAU,aAAf,UACE,yBAAQA,UAAU,kBAAlB,UACE,qBACEA,UAAU,0CACV,UAAQ,eAFV,iCAIaF,QAJb,IAIaA,OAJb,EAIaA,EAAcK,MAI3B,wBACEI,KAAK,SACLP,UAAU,SACV,UAAQ,cACRQ,QAAS+B,OAIb,sBAAKvC,UAAU,kBAAf,UACE,mBAAGA,UAAU,QAAQ,UAAQ,cAA7B,gBACGF,QADH,IACGA,OADH,EACGA,EAAcQ,QAGjB,oBAAGN,UAAU,QAAQ,UAAQ,aAA7B,UAEE,wBACEA,UAAWK,IAAW,CACpB,oBAAmB,OAACP,QAAD,IAACA,KAAcM,WAClC,0BAAoBN,QAApB,IAAoBA,OAApB,EAAoBA,EAAcM,YAHtC,SAMe,OAAZN,QAAY,IAAZA,KAAcM,UAAY,OAAS,YAGrC,OAED,mBAAG2C,KAAI,wBAAYL,QAAZ,IAAYA,OAAZ,EAAYA,EAAMM,OAAzB,gBACGN,QADH,IACGA,OADH,EACGA,EAAMO,oBCjChB,IAAMC,EAAgB,WAC3B,MAA0BvC,mBAAiB,IAA3C,mBAAOd,EAAP,KAAcsD,EAAd,KACA,EAAkCxC,oBAAS,GAA3C,mBAAO6B,EAAP,KAAkBC,EAAlB,KACA,EAAkC9B,oBAAS,GAA3C,mBAAOyC,EAAP,KAAkBC,EAAlB,KACA,EAAwC1C,mBAAsB,MAA9D,mBAAOb,EAAP,KAAqBwD,EAArB,KACA,EAA4B3C,mBAAiB,CAAEI,OAAQpB,EAAQmB,IAAKF,MAAO,KAA3E,mBAAO2C,EAAP,KAAeC,EAAf,KAEMC,EA/BR,SAA0B5D,EAAe0D,GAGvC,IAAME,EAAwB5D,EAAM0D,QAAO,SAAArD,GACzC,OAAQqD,EAAOxC,QACb,KAAKpB,EAAQ2B,OACX,OAAQpB,EAAKE,UAEf,KAAKT,EAAQS,UACX,OAAOF,EAAKE,UAEd,KAAKT,EAAQmB,IACb,QACE,OAAO2C,MAQb,OAJIF,EAAO3C,OACT6C,EAAcF,QAAO,qBAAGjD,MAAkBoD,SAASH,EAAO3C,MAAM+C,WAG3DF,EAUeG,CAAiB/D,EAAO0D,GAE9CtC,qBAAU,WFvBkBU,EAAY,UEyBnCO,KAAKiB,GACLL,SAAQ,kBAAML,GAAa,QAC7B,IAgBH,OACE,qCACE,qBAAKzC,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,oBAEA,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,CAAYU,aAtBH,SAACmD,GACpBL,EAAUK,QAwBF,qBAAK7D,UAAU,QAAf,SACGwC,EACC,cAAC,EAAD,IAEA,cAAC,EAAD,CACE3C,MAAO4D,EACP3D,aAAcA,EACdC,gBA5BQ,SAACG,GACvBoD,EAAgBpD,GAChBmD,GAAa,eAkCVD,GACC,cAAC,EAAD,CACEtD,aAAcA,EACdyC,iBAlCiB,WACvBe,EAAgB,MAChBD,GAAa,UC7DjBS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3f149583.chunk.js","sourcesContent":["export enum Options {\n  all = 'all',\n  active = 'active',\n  completed = 'completed',\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectedTodo: Todo | null,\n  handleShowModal: (todo: Todo) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos, selectedTodo, handleShowModal,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            key={todo.id}\n            data-cy=\"todo\"\n            className=\"\"\n          >\n            <td className=\"is-vcentered\">\n              {todo.id}\n            </td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={classNames({\n                  'has-text-danger': !todo.completed,\n                  'has-text-success': todo.completed,\n                })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => handleShowModal(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={classNames(\n                    'far',\n                    {\n                      'fa-eye-slash': selectedTodo?.id === todo.id,\n                      'fa-eye': selectedTodo?.id !== todo.id,\n                    },\n                  )}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Filter } from '../../types/Filter';\nimport { Options } from '../../types/Options';\n\ntype Props = {\n  handleFilter: (filter: Filter) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({ handleFilter }) => {\n  const [query, setQuery] = useState('');\n  const [option, setOption] = useState<Options>(Options.all);\n\n  useEffect(() => {\n    handleFilter({ query, option });\n  }, [query, option]);\n\n  const handleChangeFilterOption\n    = (event: React.ChangeEvent<HTMLSelectElement>) => {\n      setOption(event.target.value as Options);\n    };\n\n  const handleChangeQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n  };\n\n  const handleDeleteQuery = () => {\n    setQuery('');\n    setOption(Options.all);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={option}\n            onChange={handleChangeFilterOption}\n          >\n            <option value={Options.all}>All</option>\n            <option value={Options.active}>Active</option>\n            <option value={Options.completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleChangeQuery}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query\n          && (\n            <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                data-cy=\"clearSearchButton\"\n                type=\"button\"\n                className=\"delete\"\n                onClick={handleDeleteQuery}\n              />\n            </span>\n          )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\n\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ntype Props = {\n  selectedTodo: Todo | null,\n  handleCloseModal: () => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo, handleCloseModal,\n}) => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [user, setUser] = useState<User>();\n\n  useEffect(() => {\n    if (selectedTodo) {\n      getUser(selectedTodo.userId)\n        .then(userFromServer => setUser(userFromServer))\n        .finally(() => setIsLoading(false));\n    }\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo # ${selectedTodo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handleCloseModal}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              <strong\n                className={classNames({\n                  'has-text-danger': !selectedTodo?.completed,\n                  'has-text-success': selectedTodo?.completed,\n                })}\n              >\n                {selectedTodo?.completed ? 'Done' : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { Filter } from './types/Filter';\nimport { Options } from './types/Options';\nimport { getTodos } from './api';\n\nfunction getFilteredTodos(todos: Todo[], filter: Filter) {\n  // let filteredTodos = [...todos];\n\n  const filteredTodos: Todo[] = todos.filter(todo => {\n    switch (filter.option) {\n      case Options.active:\n        return !todo.completed;\n\n      case Options.completed:\n        return todo.completed;\n\n      case Options.all:\n      default:\n        return filteredTodos;\n    }\n  });\n\n  if (filter.query) {\n    filteredTodos.filter(({ title }) => title.includes(filter.query.trim()));\n  }\n\n  return filteredTodos;\n}\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [showModal, setShowModal] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [filter, setFilter] = useState<Filter>({ option: Options.all, query: '' });\n\n  const filteredTodos = getFilteredTodos(todos, filter);\n\n  useEffect(() => {\n    getTodos()\n      .then(setTodos)\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const handleFilter = (currentFilter: Filter) => {\n    setFilter(currentFilter);\n  };\n\n  const handleShowModal = (todo: Todo) => {\n    setSelectedTodo(todo);\n    setShowModal(true);\n  };\n\n  const handleCloseModal = () => {\n    setSelectedTodo(null);\n    setShowModal(false);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter handleFilter={handleFilter} />\n            </div>\n\n            <div className=\"block\">\n              {isLoading ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  todos={filteredTodos}\n                  selectedTodo={selectedTodo}\n                  handleShowModal={handleShowModal}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {showModal && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          handleCloseModal={handleCloseModal}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}